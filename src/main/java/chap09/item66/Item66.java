package chap09.item66;

/**
 * 네이티브 메서드는 신중히 사용하라
 */
public class Item66 {

  public static void main(String[] args) {

  }
}

/*
네이티브 메서드란 무엇인가
JNI, Java Native Interface 는 자바로 네이티브 메서드를 호출하는 것이며 그 이유는
1. registry 와 같은 플랫폼 (OS) 특화 기능 사용하기 위함
2. 네이티브 코드로 작성된 기존 라이브러리를 사용하기 위함
3. 성능 개선을 목적으로 성능에 결정적인 영향을 주는 영역

최근에는 성능 개선 목적으로 JNI 사용하는 것은 권장되지 않는다
Java 가 성숙해지면서 기본 제공되는 라이브러리의 기능 또한 많은 발전을 했기 때문
JVM 이 발전되면서 겁나 빨라지고 네이티브 메서드를 직접 사용할 때의 위험성 (메모리 훼손, 와일드 포인터 등)이 줄어들었고
GraalVM 같은 놈이 등장하면서 자바 외에 언어들 (python, go ...)도 JVM 위에서 동작이 가능해질 것이다
이는 필요에 따라 성능 향상을 위해 다른 언어도 돌려버릴 수 있다는 것이니 네이티브 메서드 직접 사용을 지양하도록 돕는다

웹 개발에서의 대부분은 네트워크로 인한 오버헤드가 문제니 사용할 일이 거의 없을 것이다
극도로 최적화된 성능이 필요할 때 네이티브 메서드를 고려해야 한다
네이티브 라이브러리의 GNU 다중 정밀 연산 라이브러리 같은 것은
비교가 무색하게 네이티브 쪽이 좋아서 이런 특수한 경우에만 네이티브 사용을 고려하자
자바 라이브러리의 성능에 만족할 수 없고
네이티브 라이브러리를 이용하면 월등히 향상될 경우, 네이티브 메서드를 사용하는게 좋다
다만 그런 상황에도 네이티브 메서드가 불러일으키는 side effect 가 뭔지 알아야 한다
 */